<extensionManifest><systemApiVersion>1.11.3</systemApiVersion><extensions><extension><name>org.apache.nifi.cdc.postgresql.processors.Wal2JsonPostgreSQL96Capture</name><type>PROCESSOR</type><deprecationNotice/><description>Retrieves Change Data Capture (CDC) events from a PostgreSQL database, using wal2json output plugin. wal2json MUST support "format-version" option. Works for PostgreSQL version 9.6. CDC Events include INSERT, UPDATE, DELETE operations. Events are output as individual flow files ordered by the time at which the operation occurred. This processor use a replication connection to stream data and sql connection to snapshot.</description><tags><tag>sql</tag><tag>jdbc</tag><tag>cdc</tag><tag>postgresql</tag></tags><properties><property><name>cdc-postgresql-host</name><displayName>PostgreSQL Host</displayName><description>A list of hostname/port entries corresponding to nodes in a PostgreSQL cluster. The entries should be comma separated using a colon such as host1:port,host2:port,....  For example postgresql.myhost.com:5432. This processor will attempt to connect to the hosts in the list in order. If one node goes down and failover is enabled for the cluster, then the processor will connect to the active node (assuming its host entry is specified in this property.  The default port for PostgreSQL connections is 5432.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-driver-class</name><displayName>PostgreSQL Driver Class Name</displayName><description>The class name of the PostgreSQL database driver class</description><defaultValue>org.postgresql.Driver</defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-driver-locations</name><displayName>PostgreSQL Driver Location(s)</displayName><description>Comma-separated list of files/folders and/or URLs containing the PostgreSQL driver JAR and its dependencies (if any).For example '/var/tmp/postgresql-42.2.9.jar'</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>VARIABLE_REGISTRY</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-database</name><displayName>Database</displayName><description>Specifies the name of the database to connect to.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-user</name><displayName>Username</displayName><description>Username to access PostgreSQL cluster.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-password</name><displayName>Password</displayName><description>Password to access PostgreSQL cluster.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>true</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-schema-name</name><displayName>Schema</displayName><description>PostgreSQL schema name. Schema defines tables whose data changes are intended to be replicated through logical replication.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-tables</name><displayName>Tables</displayName><description>include only rows from the specified tables. Default is all tables from all schemas.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-slot-name</name><displayName>Slot Name</displayName><description>A unique, cluster-wide identifier for the replication slot. Each replication slot has a name, which can contain lower-case letters, numbers, and the underscore character. Existing replication slots and their state can be seen in the pg_replication_slots view.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-snapshot</name><displayName>Make Snapshot</displayName><description>The initial data in existing subscribed tables are snapshotted and copied in a parallel instance of a special kind of apply process. This process will create its own temporary replication slot and copy the existing data. Once existing data is copied, the worker enters synchronization mode, which ensures that the table is brought up to a synchronized state with the main apply process by streaming any changes that happened during the initial data copy using standard logical replication. Once the synchronization is done, the control of the replication of the table is given back to the main apply process where the replication continues as normal.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-include-begin-commit</name><displayName>Include Begin/Commit Events</displayName><description>Specifies whether to emit events corresponding to a BEGIN or COMMIT event. Set to true if the BEGIN/COMMIT events are necessary in the downstream flow, otherwise set to false, which suppresses generation of these events and can increase flow performance.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-init-lsn</name><displayName>Initial Log Sequence Number - LSN</displayName><description>Specifies an initial Log Sequence Number - LSN to use if this processor's State does not have a current sequence identifier. If a Log Sequence Number - LSN  is present in the processor's State, this property is ignored. Log Sequence Number - LSN are monotonically increasing integers that record the order of flow files generated by the processor. They can be used with the EnforceOrder processor to guarantee ordered delivery of CDC events.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>cdc-postgresql-drop-slot-if-exists</name><displayName>Drop If Exists Replication Slot</displayName><description>The initial data in existing subscribed tables are snapshotted and copied in a parallel instance of a special kind of apply process. This process will create its own temporary replication slot and copy the existing data. Once existing data is copied, the worker enters synchronization mode, which ensures that the table is brought up to a synchronized state with the main apply process by streaming any changes that happened during the initial data copy using standard logical replication. Once the synchronization is done, the control of the replication of the table is given back to the main apply process where the replication continues as normal.</description><defaultValue>false</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties></dynamicProperties><relationships><relationship><name>success</name><description>Successfully created FlowFile from CDC event.</description><autoTerminated>false</autoTerminated></relationship></relationships><dynamicRelationship></dynamicRelationship><readsAttributes></readsAttributes><writesAttributes><writesAttribute><name>last.lsn.received</name><description>A Log Sequence Number  (i.e. strictly increasing integer value) specifying the order of the CDC event flow file relative to the other event flow file(s).</description></writesAttribute><writesAttribute><name>mime.type</name><description>The processor outputs flow file content in JSON format, and sets the mime.type attribute to application/json</description></writesAttribute></writesAttributes><stateful><description>Information such as a 'pointer' to the current CDC event in the database is stored by this processor, such that it can continue from the same location if restarted.</description><scopes><scope>CLUSTER</scope></scopes></stateful><restricted></restricted><inputRequirement>INPUT_FORBIDDEN</inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso/></extension></extensions></extensionManifest>